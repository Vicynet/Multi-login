services:
  multi-login-write:
    container_name: multi-login-write
    image: 'postgres:alpine'
    environment:
      POSTGRES_DB: multi-login-write
      POSTGRES_USER: secret
      POSTGRES_PASSWORD: secret
      PGDATA: /data/multi-login-write
    volumes:
      - multi-login-write:/data/multi-login-write
    ports:
      - '5432:5432'
    networks:
      - postgres
    restart: unless-stopped

  multi-login-read:
    container_name: multi-login-read
    image: 'postgres:alpine'
    environment:
      POSTGRES_DB: multi-login-read
      POSTGRES_USER: secret
      POSTGRES_PASSWORD: secret
      PGDATA: /data/multi-login-read
    volumes:
      - multi-login-read:/data/multi-login-read
    ports:
      - '5433:5432'
    networks:
      - postgres
    restart: unless-stopped

  adminer:
    container_name: adminer
    image: adminer
    volumes:
      - adminer:/var/lib/adminer
    ports:
      - '8888:8080'
    networks:
      - postgres
    restart: unless-stopped

  prometheus:
    container_name: prometheus
    image: bitnami/prometheus:latest
    volumes:
      - ./prometheus/prometheus-persistence:/opt/bitnami/prometheus/data
      - ./prometheus/prometheus.yaml:/opt/bitnami/prometheus/conf/prometheus.yml
      - ./prometheus/alerting-rules.yaml:/opt/bitnami/prometheus/conf/alerting-rules.yml
    ports:
      - '9090:9090'
    links:
      - node-exporter:node-exporter
    networks:
      - monitoring
    restart: unless-stopped

  grafana:
    container_name: grafana
    image: grafana/grafana-enterprise
    user: root
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGNUP: false
      GF_SERVER_DOMAIN: localhost
      GF_LOG_MODE: console file
      GF_LOG_FILTER: alerting.notifier.slack:debug alertmanager:debug ngalert:debug
      GF_SMTP_ENABLED: true
      GF_SMTP_HOST: mailpit:1025
      GF_SMTP_FROM_ADDRESS: alertmanager@vicynet.dev
      GF_SMTP_FROM_NAME: Grafana Alerts
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/resources:/etc/grafana/provisioning/
    ports:
      - '3030:3000'
    networks:
      - monitoring
    restart: unless-stopped

  alert-manager:
    container_name: alert-manager
    image: bitnami/alertmanager:latest
    volumes:
      - ./alert-manager/alert-config.yaml:/opt/bitnami/alertmanager/conf/config.yml
    ports:
      - '9093:9093'
    networks:
      - monitoring
    restart: unless-stopped

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - '9411:9411'
    networks:
      - monitoring
    restart: unless-stopped

  mail-pit:
    container_name: mail-pit
    image: axllent/mailpit
    ports:
      - '1025:1025'
      - '8025:8025'
    networks:
      - monitoring
    restart: unless-stopped

  postgres-exporter-write:
    container_name: postgres-exporter-write
    image: bitnami/postgres-exporter:latest
    ports:
      - '9187:9187'
    environment:
      DATA_SOURCE_NAME: "postgresql://secret:secret@host.docker.internal:5432/multi-login-write?sslmode=disable"
    networks:
      - monitoring
    restart: unless-stopped

  postgres-exporter-read:
    container_name: postgres-exporter-read
    image: bitnami/postgres-exporter:latest
    ports:
      - '9188:9187'
    environment:
      DATA_SOURCE_NAME: "postgresql://secret:secret@host.docker.internal:5433/multi-login-read?sslmode=disable"
    networks:
      - monitoring
    restart: unless-stopped

  node-exporter:
    container_name: node-exporter
    image: bitnami/node-exporter:latest
    ports:
      - '9100:9100'
    networks:
      - monitoring
    restart: unless-stopped


networks:
  postgres:
    driver: bridge
  monitoring:
    driver: bridge

volumes:
  multi-login-write:
  multi-login-read:
  adminer: